/**
* Given a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.
* Example:
* Given a binary tree

*          1
*         / \
*        2   3
*       / \     
*      4   5    

* Return 3, which is the length of the path [4,2,1,3] or [5,2,1,3]. 
*/

struct TreeNode{
  int val;
  TreeNode *left;
  TreeNode *right;
  TreeNode(int x): val(x), left(NULL), right(NULL){}
};

class Solution{
  public:
    int diameterOfBinaryTree(TreeNode* root){
      int longestPath=0;
      cntPath(root, longestPath);
      return longestPath;
    }
    
    int cntPath(TreeNode* node, int lognestPath){
      if(!node) return 0;
      int left = cntPath(node->left, longestPath);
      int right = cntPath(node->right, longestPath);
      longestPath = max(longestPath, right+left);
      return 1+max(left, right);
    }
}
